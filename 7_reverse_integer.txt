
Question:
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321

Example 2:

Input: -123
Output: -321

Example 3:

Input: 120
Output: 21

Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [âˆ’231,  231 âˆ’ 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.


Solution1(SLOW(25%)):

class Solution {
public:
        
    int reverse(long long int x) 
    {
        long long int temp=abs(x);
        long long int rev=0;
        for(unsigned int i=0;temp!=0;i++)
        {
            rev=rev*10+(temp%10);
            temp=temp/10;
        }
        
        
        if(x>=0)
        {
              //cout<<"positive";
              //return rev;
              if(rev>2147483647)
                  return 0;
              else 
                  return rev;
            
        }
        else
        {
            
             //cout<<"negative";
             rev=rev*(-1);
             if(rev<-2147483648)
                  return 0;
              else 
                  return rev;
             
             //return rev;            
        }
        
        
        
    }
};


Solution2(BETTER(50%)):
class Solution {
public:
        
    int reverse(long long int x) 
    {
        long long int temp=abs(x);
        long long int rev=0;
        for(unsigned int i=0;temp!=0;i++)
        {
            rev=rev*10+(temp%10);
            temp=temp/10;
        }
        
        
        if(x>=0)
        {
              //cout<<"positive";
              //return rev;
              if(rev>pow(2,31)-1)
                  return 0;
              else 
                  return rev;
            
        }
        else
        {
            
             //cout<<"negative";
             rev=rev*(-1);
             if(rev<-pow(2,31))
                  return 0;
              else 
                  return rev;
             
             //return rev;            
        }
        
        
        
    }
};

Solution3(FASTER(97.8%)):
class Solution {
public:
        
    int reverse(long long int x) 
    {
        long long int temp=abs(x);
        long long int rev=0;
        for(unsigned int i=0;temp!=0;i++)
        {
            rev=rev*10+(temp%10);
            temp=temp/10;
        }
        
        
        if(x>=0)
        {
              //cout<<"positive";
              //return rev;
              if(rev>INT_MAX)
                  return 0;
              else 
                  return rev;
            
        }
        else
        {
            
             //cout<<"negative";
             rev=rev*(-1);
             if(rev<INT_MIN)
                  return 0;
              else 
                  return rev;
             
             //return rev;            
        }
        
        
        
    }
};
